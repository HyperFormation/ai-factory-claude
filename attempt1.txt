I want to setup a Claude Code based repository that will function as an software AI factory. 

What is my vision of an AI factory? A coding agent built on the claude code platform that will have a standardized way to track PRDs, tasks and have knowledge about a project's goals, scope and current status. Using sub-agents it will be able to run loops where agents work and check work in order to develop software in a way that meets established standards, requirements, architecture, scope. 

To enable this I would like you to make a torough plan file setting the goal explained above while also setting up the following: 

1. A .claude folder containing information that claude should always have access to including: 
- "project.md" file with details about the given project
- a file with code architecture, tech stack and standards
- a file with the technical status of the project, with a summary of the most recent changes and features implemented. 
- list of allowed claude code agent permissions

2. A PRD folder containing folders named by each PRD using the format "PRD-{number}". In each of these folders we would have a prd.md file generated by the "PRD Writer" subagent, along with a tasks.md file that has a list of tasks and their status, branch, commits in json format. Each task has its own file named witht the task ID in the format "TASK-{number}.md". The task files each contain a plan of how to implement the task based on the PRD and other data as created by the Planner subagent. 

A folder of agents with individual agents for: 
- PRD Writer
- Planner
- Coder
- Designer (not an actual designer, but agent in charge of keeping interfaces looking consistent, making sure UI is built consistently and using the same components, patterns and colors. It basically ensures a consistent visual design across the project and across all tasks). 
- Tester 
- Git Manager (manages making branches for each task, tagging them with the PRD they are part of, reviewing git history when other flows need that, getting data for summaries and tasks list. 

A folder of slash commands with: 
- /prd (Write a PRD based on the instructions. Ask clarifying questions. Write down ACs and edge cases, make a folder for the PRD. )
- /plan (based on $prd, write an overarching high level plan from a technical standpoint. 
when plan is executed again for a $prd with a plan in the prd folder, break down the prd+plan into tasks. Each task is a file. It has annotation for its status (todo, reviewed, on branch,  completed). 
- /build (receives a $task, reviews task $prd and plan. switches to branch if needed. writes the functionality tests based on PRD ACs. Writes the code to meet ACs according to plan and task description. Runs tests, codes again until tests pass. Runs designer to update UI and write UI tests. Runs tests. LOOP)

